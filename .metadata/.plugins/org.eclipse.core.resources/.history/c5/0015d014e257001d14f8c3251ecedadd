package com.portfolio.mgb.Controller;

import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.portfolio.api.Entity.Persona;
import com.portfolio.api.Interface.IPersonaService;

import org.springframework.security.access.prepost.PreAuthorize;

//@CrossOrigin(origins = "https://mgbfrontend.web.app")

@RestController
@CrossOrigin(origins = "http://localhost:4200")

public class PersonaController {
	
    @Autowired IPersonaService ipersonaService;
    
    @GetMapping("/personas/traer")
    public List<Persona> getPersona(){
        return ipersonaService.getPersona();
    }
    
    //@PreAuthorize("hasRole('ADMIN')")
    @PostMapping("/personas/crear")
    public String createPersona(@RequestBody Persona persona){
        ipersonaService.savePersona(persona);
        return "La persona fue creada correctamente";
    }
    
    //@PreAuthorize("hasRole('ADMIN')")
    @DeleteMapping("/personas/borrar/{id}")
    public String deletePersona(@PathVariable Long id){
        ipersonaService.deletePersona(id);
        return "La persona fue eliminada correctamente";
    }
    
    //@PreAuthorize("hasRole('ADMIN')")
    @PutMapping("/personas/editar/{id}")
    public Persona editPersona(@PathVariable Long id,
                               @RequestParam("nombrePersona") String nuevoNombrePersona,
                               @RequestParam("apellidoPersona") String nuevoApellidoPersona,
                               @RequestParam("urlDescargaCv") String nuevourlDescargaCv,
                               @RequestParam("urlFoto") String nuevoUrlFoto,
                               @RequestParam("nombrePerfilTecnico") String nuevoNombrePerfilTecnico,
                               @RequestParam("parrafoAcercaDe") String nuevoParrafoAcercaDe,
                               @RequestParam("nomprePerfilAcerca") String nuevoNomprePerfilAcerca){
        Persona persona = ipersonaService.findPersona(id);
        
        persona.setNombrePersona(nuevoNombrePersona);
        persona.setApellidoPersona(nuevoApellidoPersona);
        persona.setUrlDescargaCv(nuevourlDescargaCv);
        persona.setUrlFoto(nuevoUrlFoto);
        persona.setNombrePerfilTecnico(nuevoNombrePerfilTecnico);
        persona.setParrafoAcercaDe(nuevoParrafoAcercaDe);
        persona.setNomprePerfilAcerca(nuevoNomprePerfilAcerca);
        
        ipersonaService.savePersona(persona);
        return persona;
    }
    
    @GetMapping("/personas/traer/perfil")
    public Persona findPersona(){
        return ipersonaService.findPersona((long)1);
    }
   
}
